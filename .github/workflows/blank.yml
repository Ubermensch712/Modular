import numpy as np
from scipy.special import erfc

# Parámetros de entrada
S0 = 191.24  # Precio actual de las acciones de Apple
K = 195      # Precio de ejercicio de la opción
r = 0.0422   # Tasa libre de riesgo anualizada
T = 0.01923  # Tiempo hasta el vencimiento en años
sigma = 0.14 # Estimación de la volatilidad

# Crear función de distribución normal
N = lambda x: 0.5 * erfc(-x / np.sqrt(2))

# Calcular d1 y d2
d1 = (np.log(S0 / K) + (r + 0.5 * sigma**2) * T) / (sigma * np.sqrt(T))
d2 = d1 - sigma * np.sqrt(T)

# Calcular el precio de la opción call y put
C = S0 * N(d1) - K * np.exp(-r * T) * N(d2)
P = K * np.exp(-r * T) * N(-d2) - S0 * N(-d1)

# Imprimir los resultados
print(f'El precio de la opción call es: {C}')
print(f'El precio de la opción put es: {P}')
